#!/bin/bash
#PBS -N BERT
#PBS -l select=1:mem=50GB:ncpus=5:ngpus=1 -q gold
#PBS -l walltime=8:00:00
#PBS -j oe
nvidia-smi
#cd "$PBS_O_WORKDIR";
cd /Scratch/zhiqiang_hu/Nancy/Politeness_dialogue/transformers/

image="/app/singularity/images/pytorch_20.12-py3.simg"
singularity exec --nv $image bash << EOF > logs/stdout.$PBS_JOBID 2> logs/stderr.$PBS_JOBID
#cd Nancy/Politeness_dialogue/transformers/
conda init
source ~/.bashrc
conda activate transformers
pwd

### classification training
python examples/pytorch/text-classification/run_glue.py \
    --model_name_or_path bert-base-uncased \
    --do_train \
    --do_eval \
    --do_predict \
    --do_contrastive_cls \
    --num_train_epochs 5 \
    --gradient_accumulation_steps 4 \
    --test_file data/AA_data/AA_cls_test.json \
    --validation_file data/AA_data/AA_cls_test.json \
    --train_file data/AA_data/AA_cls_train.json \
    --output_dir AA_region_cls/ \
    --overwrite_output_dir \
    --per_device_train_batch_size=128 \
    --per_device_eval_batch_size=16 \
    --temperature_cl 0.1 \
    --save_strategy no \
    --evaluation_strategy epoch

### evaluation
# python examples/pytorch/text-classification/run_glue.py \
#     --model_name_or_path bert-base-uncased \
#     --do_eval \
#     --do_predict \
#     --num_train_epochs 5 \
#     --gradient_accumulation_steps 4 \
#     --test_file data/AA_data/AA_cls_test.json \
#     --validation_file data/AA_data/AA_cls_test.json \
#     --train_file data/AA_data/AA_cls_train.json \
#     --output_dir AA_region_cls/ \
#     --overwrite_output_dir \
#     --per_device_train_batch_size=32 \
#     --per_device_eval_batch_size=128

### PPL score
# python PPL_score.py